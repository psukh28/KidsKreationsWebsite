---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import { Image } from 'astro:assets';
import { products } from '../../data/products';

// Import all product images
import giftset1 from '/src/assets/products/giftset-1.jpg';
import giftset2 from '/src/assets/products/giftset-2.jpg';
import giftset3 from '/src/assets/products/giftset-3.jpg';
import romper1 from '/src/assets/products/romper-1.jpg';
import romper2 from '/src/assets/products/romper-2.jpg';
import romper3 from '/src/assets/products/romper-3.jpg';
import pyjama1 from '/src/assets/products/pyjama-1.jpg';
import pyjama2 from '/src/assets/products/pyjama-2.jpg';
import pyjama3 from '/src/assets/products/pyjama-3.jpg';
import dungaree1 from '/src/assets/products/dungaree-1.jpg';
import dungaree2 from '/src/assets/products/dungaree-2.jpg';
import twopiece1 from '/src/assets/products/ELCS-56857.jpg';
import twopiece2 from '/src/assets/products/ELDK-56859.jpg';
import twopiece3 from '/src/assets/products/ELDR-56858.jpg';
import twopiece4 from '/src/assets/products/ELDR-56860.jpg';
import twopiece5 from '/src/assets/products/ELDR-56861.jpg';
import twopiece6 from '/src/assets/products/ELDR-56862.jpg';
import twopiece7 from '/src/assets/products/ELDR-56863.jpg';
import twopiece8 from '/src/assets/products/ELDR-56864.jpg';
import giftset4 from '/src/assets/products/giftset-4.jpg';
import starter1 from '/src/assets/products/starter1.jpg';
import starter2 from '/src/assets/products/starter2.jpg';
import starter3 from '/src/assets/products/starter3.jpg';

// Get the slug from the URL
const { slug } = Astro.params;

// Find the product that matches the slug
const product = products.find(p => p.slug === slug);

// If no product is found, return a 404
if (!product) {
  return Astro.redirect('/404');
}
---

<Layout title={`${product.title} - Kids Kreations`}>
  <Navigation />
  
  <main>
    <section class="product-detail">
      <div class="container">
        <div class="product-grid">
          <div class="product-gallery">
            <div class="main-image">
              <img 
                src={product.images[0].src} 
                alt={product.title}
                class="gallery-main"
                loading="eager"
              />
              <button class="zoom-button" aria-label="Zoom image">
                <i class="fas fa-search-plus"></i>
              </button>
            </div>
            <div class="thumbnail-grid">
              {product.images.map((image, index) => (
                <button class="thumbnail" data-index={index}>
                  <img 
                    src={image.src} 
                    alt={`${product.title} - View ${index + 1}`}
                    loading="eager"
                  />
                </button>
              ))}
            </div>
          </div>
          
          <div class="product-info">
            <h1>{product.title}</h1>
            <p class="description">{product.description}</p>
            
            <div class="badges">
              {product.badges.map(badge => (
                <span class={`badge ${
                  badge.includes('GOTS') || badge.includes('Organic') ? 'badge-green' :
                  badge.includes('Best') || badge.includes('Popular') ? 'badge-purple' :
                  'badge-blue'
                }`}>
                  {badge.includes('Organic') ? 'üåø' : 
                   badge.includes('Gift') ? 'üéÅ' : 
                   badge.includes('Best') ? '‚≠ê' : ''} 
                  {badge}
                </span>
              ))}
            </div>

            <div class="features">
              <h2>Features</h2>
              <ul>
                {product.features.map(feature => (
                  <li>
                    <i class="fas fa-check"></i>
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>
            </div>

            <div class="details">
              <h2>Product Details</h2>
              <div class="details-grid">
                <div class="detail-item">
                  <h3>Materials</h3>
                  <p>{product.details.materials}</p>
                </div>
                <div class="detail-item">
                  <h3>Available Sizes</h3>
                  <p>{product.details.sizes}</p>
                </div>
                <div class="detail-item">
                  <h3>Care Instructions</h3>
                  <p>{product.details.care}</p>
                </div>
                <div class="detail-item">
                  <h3>Certifications</h3>
                  <ul>
                    {product.details.certifications.map(cert => (
                      <li>{cert}</li>
                    ))}
                  </ul>
                </div>
                <div class="detail-item">
                  <h3>Packaging</h3>
                  <p>{product.details.packaging}</p>
                </div>
                <div class="detail-item">
                  <h3>Minimum Order Quantity</h3>
                  <p>{product.details.moq}</p>
                </div>
              </div>
            </div>

            <div class="cta">
              <a href="/contact" class="button button-primary">Request Quote</a>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Image Modal -->
  <div id="imageModal" class="image-modal" role="dialog" aria-modal="true" aria-label="Product image viewer">
    <div class="modal-content">
      <button class="modal-close" aria-label="Close modal">√ó</button>
      <button class="modal-nav modal-prev" aria-label="Previous image">‚Üê</button>
      <button class="modal-nav modal-next" aria-label="Next image">‚Üí</button>
      <div class="modal-image-container">
        <img 
          id="modalImage" 
          src="" 
          alt="Product image"
          class="modal-image"
        />
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<style>
  .product-detail {
    padding: var(--spacing-xl) 0;
  }

  .product-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
  }

  .product-gallery {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .main-image {
    border-radius: var(--radius-lg);
    overflow: hidden;
    background: #f8f8f8;
    position: relative;
  }

  .main-image img {
    width: 100%;
    height: auto;
    display: block;
  }

  .zoom-button {
    position: absolute;
    bottom: 1rem;
    right: 1rem;
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .zoom-button:hover {
    background: white;
    transform: scale(1.1);
  }

  .thumbnail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(80px, 1fr));
    gap: var(--spacing-sm);
  }

  .thumbnail {
    border: none;
    padding: 0;
    background: none;
    cursor: pointer;
    border-radius: var(--radius-md);
    overflow: hidden;
    transition: transform 0.2s ease;
  }

  .thumbnail:hover {
    transform: scale(1.05);
  }

  .thumbnail img {
    width: 100%;
    height: auto;
    display: block;
  }

  .product-info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  .product-info h1 {
    font-size: 2rem;
    color: var(--text-dark);
    margin: 0;
  }

  .description {
    font-size: 1.1rem;
    color: var(--text-light);
    line-height: 1.6;
  }

  .badges {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }

  .badge {
    padding: 0.5rem 1rem;
    border-radius: var(--radius-full);
    font-size: 0.875rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .badge-green {
    background-color: #ecfdf5;
    color: #059669;
  }

  .badge-purple {
    background-color: #f5f3ff;
    color: #7c3aed;
  }

  .badge-blue {
    background-color: #eff6ff;
    color: #2563eb;
  }

  .features {
    background-color: #f9fafb;
    padding: var(--spacing-lg);
    border-radius: var(--radius-lg);
  }

  .features h2 {
    font-size: 1.25rem;
    color: var(--text-dark);
    margin: 0 0 var(--spacing-md) 0;
  }

  .features ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    gap: var(--spacing-sm);
  }

  .features li {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    color: var(--text-light);
  }

  .features i {
    color: #059669;
  }

  .details {
    background-color: white;
    padding: var(--spacing-lg);
    border: 1px solid var(--border);
    border-radius: var(--radius-lg);
  }

  .details h2 {
    font-size: 1.25rem;
    color: var(--text-dark);
    margin: 0 0 var(--spacing-md) 0;
  }

  .details-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--spacing-lg);
  }

  .detail-item h3 {
    font-size: 1rem;
    color: var(--text-dark);
    margin: 0 0 var(--spacing-xs) 0;
  }

  .detail-item p,
  .detail-item ul {
    margin: 0;
    color: var(--text-light);
  }

  .detail-item ul {
    list-style: none;
    padding: 0;
  }

  .detail-item li {
    margin-bottom: var(--spacing-xs);
  }

  .cta {
    margin-top: auto;
  }

  .cta .button {
    width: 100%;
    text-align: center;
  }

  /* Image Modal Styles */
  .image-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
  }

  .modal-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    color: white;
    font-size: 2rem;
    cursor: pointer;
    z-index: 1001;
    padding: 0.5rem;
    line-height: 1;
  }

  .modal-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.1);
    border: none;
    color: white;
    font-size: 1.5rem;
    padding: 1rem;
    cursor: pointer;
    transition: background-color 0.2s ease;
    z-index: 1001;
  }

  .modal-nav:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .modal-prev {
    left: 1rem;
  }

  .modal-next {
    right: 1rem;
  }

  .modal-image-container {
    max-width: 90%;
    max-height: 90vh;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .modal-image {
    max-width: 100%;
    max-height: 90vh;
    object-fit: contain;
  }

  @media (max-width: 768px) {
    .product-grid {
      grid-template-columns: 1fr;
    }

    .thumbnail-grid {
      grid-template-columns: repeat(4, 1fr);
    }

    .details-grid {
      grid-template-columns: 1fr;
    }

    .modal-nav {
      padding: 0.5rem;
      font-size: 1.25rem;
    }
  }
</style>

<script>
  // Image Gallery Functionality
  const mainImage = document.querySelector('.gallery-main');
  const thumbnails = document.querySelectorAll('.thumbnail');
  const modal = document.getElementById('imageModal');
  const modalImage = document.getElementById('modalImage');
  const closeModal = document.querySelector('.modal-close');
  const prevButton = document.querySelector('.modal-prev');
  const nextButton = document.querySelector('.modal-next');
  let currentImageIndex = 0;

  // Update main image when thumbnail is clicked
  thumbnails.forEach((thumb, index) => {
    thumb.addEventListener('click', () => {
      const img = thumb.querySelector('img');
      if (img && mainImage) {
        mainImage.src = img.src;
        currentImageIndex = index;
      }
    });
  });

  // Open modal when main image is clicked
  mainImage?.addEventListener('click', () => {
    if (modal && modalImage) {
      modal.style.display = 'block';
      modalImage.src = mainImage.src;
      document.body.style.overflow = 'hidden';
    }
  });

  // Open modal when zoom button is clicked
  document.querySelector('.zoom-button')?.addEventListener('click', (e) => {
    e.stopPropagation(); // Prevent triggering the main image click
    if (modal && modalImage) {
      modal.style.display = 'block';
      modalImage.src = mainImage.src;
      document.body.style.overflow = 'hidden';
    }
  });

  // Close modal
  closeModal?.addEventListener('click', () => {
    if (modal) {
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }
  });

  // Close modal when clicking outside the image
  modal?.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }
  });

  // Navigate through images in modal
  prevButton?.addEventListener('click', (e) => {
    e.stopPropagation(); // Prevent modal close
    currentImageIndex = (currentImageIndex - 1 + thumbnails.length) % thumbnails.length;
    const img = thumbnails[currentImageIndex].querySelector('img');
    if (img && modalImage) {
      modalImage.src = img.src;
      mainImage.src = img.src;
    }
  });

  nextButton?.addEventListener('click', (e) => {
    e.stopPropagation(); // Prevent modal close
    currentImageIndex = (currentImageIndex + 1) % thumbnails.length;
    const img = thumbnails[currentImageIndex].querySelector('img');
    if (img && modalImage) {
      modalImage.src = img.src;
      mainImage.src = img.src;
    }
  });

  // Keyboard navigation in modal
  document.addEventListener('keydown', (e) => {
    if (modal?.style.display === 'block') {
      if (e.key === 'Escape') {
        modal.style.display = 'none';
        document.body.style.overflow = '';
      } else if (e.key === 'ArrowLeft') {
        prevButton?.click();
      } else if (e.key === 'ArrowRight') {
        nextButton?.click();
      }
    }
  });
</script> 