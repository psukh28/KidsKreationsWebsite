---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';
import { Image } from 'astro:assets';
import { products } from '../../data/products';

// Import all product images
import giftset1 from '/src/assets/products/giftset-1.jpg';
import giftset2 from '/src/assets/products/giftset-2.jpg';
import giftset3 from '/src/assets/products/giftset-3.jpg';
import romper1 from '/src/assets/products/romper-1.jpg';
import romper2 from '/src/assets/products/romper-2.jpg';
import romper3 from '/src/assets/products/romper-3.jpg';
import pyjama1 from '/src/assets/products/pyjama-1.jpg';
import pyjama2 from '/src/assets/products/pyjama-2.jpg';
import pyjama3 from '/src/assets/products/pyjama-3.jpg';
import dungaree1 from '/src/assets/products/dungaree-1.jpg';
import dungaree2 from '/src/assets/products/dungaree-2.jpg';
import twopiece1 from '/src/assets/products/ELCS-56857.jpg';
import twopiece2 from '/src/assets/products/ELDK-56859.jpg';
import twopiece3 from '/src/assets/products/ELDR-56858.jpg';
import twopiece4 from '/src/assets/products/ELDR-56860.jpg';
import twopiece5 from '/src/assets/products/ELDR-56861.jpg';
import twopiece6 from '/src/assets/products/ELDR-56862.jpg';
import twopiece7 from '/src/assets/products/ELDR-56863.jpg';
import twopiece8 from '/src/assets/products/ELDR-56864.jpg';
import giftset4 from '/src/assets/products/giftset-4.jpg';
import starter1 from '/src/assets/products/starter1.jpg';
import starter2 from '/src/assets/products/starter2.jpg';
import starter3 from '/src/assets/products/starter3.jpg';

// Generate static paths for each product
export async function getStaticPaths() {
  return products.map(product => ({
    params: { slug: product.slug },
    props: { product }
  }));
}

const { product } = Astro.props;
---

<Layout title={`${product.title} - Kids Kreations`}>
  <Navigation />
  
  <main>
    <section class="product-detail">
      <div class="container">
        <div class="product-grid">
          <div class="product-gallery">
            <div class="main-image">
              <Image 
                src={product.images[0]} 
                alt={product.title}
                width={1200}
                height={900}
                quality={95}
                format="webp"
                class="gallery-main"
                loading="eager"
                data-original-src={product.images[0].src}
              />
              <button class="zoom-button" aria-label="Zoom image">
                <i class="fas fa-search-plus"></i>
              </button>
            </div>
            <div class="thumbnail-grid">
              {product.images.map((image, index) => (
                <button class="thumbnail" data-index={index}>
                  <Image 
                    src={image} 
                    alt={`${product.title} - View ${index + 1}`}
                    width={200}
                    height={150}
                    quality={95}
                    format="webp"
                    loading="eager"
                    data-original-src={image.src}
                  />
                </button>
              ))}
            </div>
          </div>
          
          <div class="product-info">
            <h1>{product.title}</h1>
            <p class="description">{product.description}</p>
            
            <div class="badges">
              {product.badges.map(badge => (
                <span class={`badge ${
                  badge.includes('GOTS') || badge.includes('Organic') ? 'badge-green' :
                  badge.includes('Best') || badge.includes('Popular') ? 'badge-purple' :
                  'badge-blue'
                }`}>
                  {badge.includes('Organic') ? 'üåø' : 
                   badge.includes('Gift') ? 'üéÅ' : 
                   badge.includes('Best') ? '‚≠ê' : ''} 
                  {badge}
                </span>
              ))}
            </div>

            <div class="features">
              <h2>Features</h2>
              <ul>
                {product.features.map(feature => (
                  <li>
                    <i class="fas fa-check"></i>
                    <span>{feature}</span>
                  </li>
                ))}
              </ul>
            </div>

            <div class="details">
              <h2>Product Details</h2>
              <div class="details-grid">
                <div class="detail-item">
                  <h3>Materials</h3>
                  <p>{product.details.materials}</p>
                </div>
                <div class="detail-item">
                  <h3>Available Sizes</h3>
                  <p>{product.details.sizes}</p>
                </div>
                <div class="detail-item">
                  <h3>Care Instructions</h3>
                  <p>{product.details.care}</p>
                </div>
                <div class="detail-item">
                  <h3>Certifications</h3>
                  <ul>
                    {product.details.certifications.map(cert => (
                      <li>{cert}</li>
                    ))}
                  </ul>
                </div>
                <div class="detail-item">
                  <h3>Packaging</h3>
                  <p>{product.details.packaging}</p>
                </div>
                <div class="detail-item">
                  <h3>Minimum Order Quantity</h3>
                  <p>{product.details.moq}</p>
                </div>
              </div>
            </div>

            <div class="cta">
              <a href="/contact" class="button button-primary">Request Quote</a>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <!-- Image Modal -->
  <div id="imageModal" class="image-modal" role="dialog" aria-modal="true" aria-label="Product image viewer">
    <div class="modal-content">
      <button class="modal-close" aria-label="Close modal">√ó</button>
      <button class="modal-nav modal-prev" aria-label="Previous image">‚Üê</button>
      <button class="modal-nav modal-next" aria-label="Next image">‚Üí</button>
      <div class="modal-image-container">
        <img 
          id="modalImage" 
          src="" 
          alt="Product image"
          class="modal-image"
        />
      </div>
    </div>
  </div>

  <Footer />
</Layout>

<style>
  .product-detail {
    padding: var(--spacing-xl) 0;
  }

  .product-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
  }

  .product-gallery {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .main-image {
    border-radius: var(--radius-lg);
    overflow: hidden;
    background: #f8f8f8;
    position: relative;
  }

  /* Portrait orientation for specific products */
  .product-card[data-orientation="portrait"] .main-image {
    aspect-ratio: 3/4;
  }

  /* Landscape orientation for other products */
  .product-card[data-orientation="landscape"] .main-image {
    aspect-ratio: 4/3;
  }

  .gallery-main {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .thumbnail-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: var(--spacing-sm);
  }

  .thumbnail {
    border-radius: var(--radius-md);
    overflow: hidden;
    border: 2px solid transparent;
    padding: 0;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  /* Portrait orientation for thumbnails of specific products */
  .product-card[data-orientation="portrait"] .thumbnail {
    aspect-ratio: 3/4;
  }

  /* Landscape orientation for thumbnails of other products */
  .product-card[data-orientation="landscape"] .thumbnail {
    aspect-ratio: 4/3;
  }

  .thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .product-info {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-lg);
  }

  h1 {
    font-family: 'DM Serif Display', serif;
    font-size: 2.5rem;
    color: var(--text-dark);
    margin: 0;
  }

  .description {
    font-size: 1.1rem;
    line-height: 1.6;
    color: var(--text-light);
  }

  .badges {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }

  .badge {
    padding: 0.5rem 1rem;
    border-radius: var(--radius-full);
    font-size: 0.875rem;
    font-weight: 500;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  .badge-blue {
    background: #EEF2FF;
    color: #4F46E5;
  }

  .badge-green {
    background: #ECFDF5;
    color: #059669;
  }

  .badge-purple {
    background: #F5F3FF;
    color: #7C3AED;
  }

  .features {
    background: white;
    padding: var(--spacing-lg);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
  }

  .features h2 {
    font-size: 1.5rem;
    margin-bottom: var(--spacing-md);
  }

  .features ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
  }

  .features li {
    display: flex;
    align-items: center;
    gap: var(--spacing-sm);
    font-size: 1rem;
    color: var(--text-light);
  }

  .features i {
    color: var(--primary);
    font-size: 0.875rem;
  }

  .details {
    background: white;
    padding: var(--spacing-lg);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-sm);
  }

  .details h2 {
    font-size: 1.5rem;
    margin-bottom: var(--spacing-md);
  }

  .details-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg);
  }

  .detail-item h3 {
    font-size: 1rem;
    color: var(--text-dark);
    margin-bottom: var(--spacing-xs);
  }

  .detail-item p,
  .detail-item ul {
    color: var(--text-light);
    font-size: 0.95rem;
    margin: 0;
  }

  .detail-item ul {
    list-style: none;
    padding: 0;
  }

  .cta {
    margin-top: auto;
  }

  .button {
    display: inline-block;
    padding: 1rem 2rem;
    border-radius: var(--radius-full);
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    text-align: center;
  }

  .button-primary {
    background: var(--primary);
    color: white;
  }

  .button-primary:hover {
    background: var(--primary-dark);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  @media (max-width: 1024px) {
    .product-grid {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
    }

    .product-gallery {
      max-width: 800px;
      margin: 0 auto;
    }
  }

  @media (max-width: 768px) {
    .details-grid {
      grid-template-columns: 1fr;
      gap: var(--spacing-md);
    }

    h1 {
      font-size: 2rem;
    }

    .description {
      font-size: 1rem;
    }
  }

  .image-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.9);
    backdrop-filter: blur(10px);
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .image-modal.active {
    display: flex;
    opacity: 1;
  }

  .modal-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: var(--spacing-xl);
  }

  .modal-image-container {
    max-width: 90vw;
    max-height: 90vh;
    display: flex;
    align-items: center;
    justify-content: center;
    aspect-ratio: auto;
  }

  .modal-image {
    max-width: 100%;
    max-height: 90vh;
    object-fit: contain;
    border-radius: var(--radius-lg);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  .modal-close {
    position: absolute;
    top: var(--spacing-lg);
    right: var(--spacing-lg);
    background: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
    color: var(--text-dark);
    transition: all 0.3s ease;
    z-index: 1001;
  }

  .modal-close:hover {
    background: var(--primary);
    color: white;
    transform: scale(1.1);
  }

  .modal-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    cursor: pointer;
    color: var(--text-dark);
    transition: all 0.3s ease;
    z-index: 1001;
    backdrop-filter: blur(4px);
  }

  .modal-prev {
    left: var(--spacing-lg);
  }

  .modal-next {
    right: var(--spacing-lg);
  }

  .modal-nav:hover {
    background: var(--primary);
    color: white;
    transform: translateY(-50%) scale(1.1);
  }

  /* Add zoom button to main image */
  .main-image {
    position: relative;
  }

  .zoom-button {
    position: absolute;
    top: var(--spacing-sm);
    right: var(--spacing-sm);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 20;
    backdrop-filter: blur(4px);
    opacity: 0;
  }

  .main-image:hover .zoom-button {
    opacity: 1;
  }

  .zoom-button:hover {
    background: var(--primary);
    color: white;
    transform: scale(1.1);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mainImage = document.querySelector('.gallery-main');
    const thumbnails = document.querySelectorAll('.thumbnail');
    let currentIndex = 0;

    // Modal elements
    const modal = document.getElementById('imageModal');
    const modalImg = document.getElementById('modalImage');
    const closeBtn = document.querySelector('.modal-close');
    const prevBtn = document.querySelector('.modal-prev');
    const nextBtn = document.querySelector('.modal-next');
    const zoomBtn = document.querySelector('.zoom-button');

    function updateMainImage(index) {
      const newSrc = thumbnails[index].querySelector('img').getAttribute('data-original-src');
      mainImage.src = newSrc;
      
      thumbnails.forEach(thumb => thumb.classList.remove('active'));
      thumbnails[index].classList.add('active');
      
      currentIndex = index;
    }

    thumbnails.forEach((thumb, index) => {
      thumb.addEventListener('click', () => {
        updateMainImage(index);
      });
    });

    // Modal functionality
    function openModal(imageSrc) {
      modalImg.src = imageSrc;
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
      updateNavigationButtons();
    }
    
    function closeModal() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }

    function showNextImage() {
      const images = Array.from(thumbnails).map(thumb => 
        thumb.querySelector('img').getAttribute('data-original-src')
      );
      currentIndex = (currentIndex + 1) % images.length;
      modalImg.src = images[currentIndex];
      updateNavigationButtons();
    }

    function showPrevImage() {
      const images = Array.from(thumbnails).map(thumb => 
        thumb.querySelector('img').getAttribute('data-original-src')
      );
      currentIndex = (currentIndex - 1 + images.length) % images.length;
      modalImg.src = images[currentIndex];
      updateNavigationButtons();
    }

    function updateNavigationButtons() {
      const images = Array.from(thumbnails);
      prevBtn.style.display = images.length > 1 ? 'flex' : 'none';
      nextBtn.style.display = images.length > 1 ? 'flex' : 'none';
    }

    // Event listeners
    if (zoomBtn) {
      zoomBtn.addEventListener('click', () => {
        openModal(mainImage.src);
      });
    }

    mainImage.addEventListener('click', () => {
      openModal(mainImage.src);
    });
    
    closeBtn.addEventListener('click', closeModal);
    
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });
    
    prevBtn.addEventListener('click', showPrevImage);
    nextBtn.addEventListener('click', showNextImage);
    
    document.addEventListener('keydown', (e) => {
      if (!modal.classList.contains('active')) return;
      
      switch(e.key) {
        case 'Escape':
          closeModal();
          break;
        case 'ArrowLeft':
          showPrevImage();
          break;
        case 'ArrowRight':
          showNextImage();
          break;
      }
    });

    // Initialize first thumbnail as active
    thumbnails[0].classList.add('active');
  });
</script> 