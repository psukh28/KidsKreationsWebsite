---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
---

<Layout title="Contact Us - Kids Kreations">
  <Navigation />
  
  <main>
    <section class="hero contact-hero">
      <div class="container">
        <div class="section-title">
          <h1>Contact Us</h1>
          <p>Get in touch with our team to discuss your infantwear manufacturing needs</p>
        </div>
      </div>
    </section>

    <section class="contact-content">
      <div class="container">
        <div class="contact-grid">
          <div class="card contact-info">
            <h2>Get in Touch</h2>
            <div class="info-item">
              <i class="fas fa-envelope"></i>
              <div>
                <h3>Email</h3>
                <p><a href="mailto:lilsoft@kidskreationsco.com">lilsoft@kidskreationsco.com</a></p>
              </div>
            </div>
            <div class="info-item">
              <i class="fas fa-phone"></i>
              <div>
                <h3>Phone</h3>
                <p>+66 34 877 221</p>
              </div>
            </div>
            <div class="info-item">
              <i class="fas fa-map-marker-alt"></i>
              <div>
                <h3>Address</h3>
                <p>234 หมู่ที่ 10 Setthakij 1 Rd, Khlong Maduea, Krathum Baen District,<br>Samut Sakhon, Thailand 74110</p>
              </div>
            </div>
            <div class="social-links">
              <a href="https://www.linkedin.com/company/kids-kreations-company-limited/" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn"><i class="fab fa-linkedin"></i></a>
              <a href="https://www.facebook.com/lilsoftbaby" target="_blank" rel="noopener noreferrer" aria-label="Facebook"><i class="fab fa-facebook"></i></a>
              <a href="https://www.instagram.com/lilsoft_baby/" target="_blank" rel="noopener noreferrer" aria-label="Instagram"><i class="fab fa-instagram"></i></a>
            </div>
          </div>
          <div class="card contact-form">
            <h2>Send us a Message</h2>
            <form id="contactForm">
              <div class="form-row">
                <div class="form-group">
                  <label for="name">Name<span class="required">*</span></label>
                  <input 
                    type="text" 
                    id="name" 
                    name="name" 
                    required 
                    placeholder="Your full name"
                    aria-required="true"
                    minlength="2"
                    maxlength="100"
                    pattern="[A-Za-z\s\-']+"
                    title="Please enter a valid name (letters, spaces, hyphens, and apostrophes only)"
                  >
                  <div class="error-message" id="name-error"></div>
                </div>
                <div class="form-group">
                  <label for="email">Email<span class="required">*</span></label>
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required 
                    placeholder="you@company.com"
                    aria-required="true"
                    pattern="[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$"
                    title="Please enter a valid email address"
                  >
                  <div class="error-message" id="email-error"></div>
                </div>
              </div>
              <div class="form-group">
                <label for="company">Company</label>
                <input 
                  type="text" 
                  id="company" 
                  name="company" 
                  placeholder="(Optional)"
                  maxlength="100"
                >
                <div class="error-message" id="company-error"></div>
              </div>
              <div class="form-group">
                <label for="type">Type of Request<span class="required">*</span></label>
                <select 
                  id="type" 
                  name="type" 
                  required
                  aria-required="true"
                >
                  <option value="">Select a request type</option>
                  <option value="Factory Visit">Factory Visit</option>
                  <option value="MOQ">MOQ</option>
                  <option value="Prices">Prices</option>
                  <option value="General">General</option>
                  <option value="Partnership">Partnership</option>
                  <option value="Other">Other</option>
                </select>
              </div>
              <div class="form-group">
                <label for="message">Message<span class="required">*</span></label>
                <textarea 
                  id="message" 
                  name="message" 
                  rows="5" 
                  required 
                  placeholder="Tell us about your inquiry, order, or idea"
                  aria-required="true"
                  minlength="10"
                  maxlength="1000"
                ></textarea>
                <div class="error-message" id="message-error"></div>
              </div>
              <button type="submit" class="button button-primary">Send Message</button>
              <div id="form-status" class="form-status"></div>
              <p class="privacy-note">We respect your privacy. Your information will only be used to respond to your inquiry.</p>
            </form>
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</Layout>

<style>
  .contact-hero {
    background: linear-gradient(to right, var(--primary-light), var(--background));
    padding: var(--spacing-xl) 0;
    text-align: center;
  }

  .contact-content {
    padding: var(--spacing-xl) 0;
    background: var(--background);
  }

  .contact-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
  }

  .contact-info,
  .contact-form {
    padding: var(--spacing-xl);
  }

  .contact-info h2,
  .contact-form h2 {
    color: var(--text-dark);
    margin-bottom: var(--spacing-lg);
  }

  .info-item {
    display: flex;
    align-items: flex-start;
    margin-bottom: var(--spacing-lg);
  }

  .info-item i {
    color: var(--primary);
    font-size: 1.5rem;
    margin-right: var(--spacing-md);
    margin-top: 0.25rem;
  }

  .info-item h3 {
    font-size: 1.2rem;
    margin-bottom: var(--spacing-xs);
    color: var(--text-dark);
  }

  .info-item p {
    color: var(--text-light);
    margin: 0;
  }

  .social-links {
    display: flex;
    gap: var(--spacing-md);
    margin-top: var(--spacing-lg);
  }

  .social-links a {
    color: var(--text-light);
    font-size: 1.5rem;
    transition: color 0.2s ease;
  }

  .social-links a:hover {
    color: var(--primary);
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-md);
  }

  .form-group {
    margin-bottom: var(--spacing-md);
  }

  .form-group label {
    display: block;
    margin-bottom: var(--spacing-xs);
    color: var(--text-dark);
    font-weight: 500;
  }

  .required {
    color: #e13a3a;
    font-weight: bold;
    margin-left: 2px;
  }

  .form-group input,
  .form-group textarea,
  .form-group select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--border);
    border-radius: var(--radius-md);
    font-family: inherit;
    font-size: 1rem;
    transition: border-color 0.2s ease, box-shadow 0.2s ease;
    background: var(--background);
  }

  .form-group select {
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1rem;
    padding-right: 2.5rem;
  }

  .form-group input:focus,
  .form-group textarea:focus,
  .form-group select:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px var(--primary-light);
  }

  .form-group textarea {
    resize: vertical;
    min-height: 120px;
  }

  .form-status {
    margin-top: var(--spacing-md);
    padding: var(--spacing-sm);
    border-radius: var(--radius-md);
    font-weight: 500;
  }

  .form-status.success {
    background-color: #ecfdf5;
    color: #059669;
    border: 1px solid #a7f3d0;
  }

  .form-status.error {
    background-color: #fef2f2;
    color: #dc2626;
    border: 1px solid #fecaca;
  }

  .privacy-note {
    margin-top: var(--spacing-md);
    font-size: 0.875rem;
    color: var(--text-lighter);
    text-align: center;
  }

  button[type="submit"] {
    width: 100%;
    margin-top: var(--spacing-md);
  }

  @media (max-width: 768px) {
    .form-row {
      grid-template-columns: 1fr;
      gap: var(--spacing-sm);
    }

    .contact-grid {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
    }

    .contact-info {
      order: 2;
    }

    .contact-form {
      order: 1;
    }
  }

  .error-message {
    color: #dc2626;
    font-size: 0.875rem;
    margin-top: 0.25rem;
    display: none;
  }

  .form-group input:invalid,
  .form-group textarea:invalid,
  .form-group select:invalid {
    border-color: #dc2626;
  }

  .form-group input:invalid:focus,
  .form-group textarea:invalid:focus,
  .form-group select:invalid:focus {
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    if (!form) {
      console.error('Contact form not found');
      return;
    }

    const submitButton = form.querySelector('button[type="submit"]');
    const formStatus = document.getElementById('form-status');
    const originalButtonText = submitButton.textContent;

    // Validation functions
    const validators = {
      name: (value) => {
        if (value.length < 2) return 'Name must be at least 2 characters long';
        if (value.length > 100) return 'Name must be less than 100 characters';
        if (!/^[A-Za-z\s\-']+$/.test(value)) return 'Name can only contain letters, spaces, hyphens, and apostrophes';
        return '';
      },
      email: (value) => {
        if (!/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(value)) {
          return 'Please enter a valid email address';
        }
        return '';
      },
      company: (value) => {
        if (value && value.length > 100) return 'Company name must be less than 100 characters';
        return '';
      },
      type: (value) => {
        if (!value) return 'Please select a request type';
        return '';
      },
      message: (value) => {
        if (value.length < 10) return 'Message must be at least 10 characters long';
        if (value.length > 1000) return 'Message must be less than 1000 characters';
        return '';
      }
    };

    // Show error message
    function showError(input, message) {
      const errorElement = document.getElementById(`${input.id}-error`);
      if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.display = 'block';
        input.classList.add('invalid');
      }
    }

    // Clear error message
    function clearError(input) {
      const errorElement = document.getElementById(`${input.id}-error`);
      if (errorElement) {
        errorElement.textContent = '';
        errorElement.style.display = 'none';
        input.classList.remove('invalid');
      }
    }

    // Validate single field
    function validateField(input) {
      const validator = validators[input.name];
      if (validator) {
        const error = validator(input.value);
        if (error) {
          showError(input, error);
          return false;
        }
        clearError(input);
        return true;
      }
      return true;
    }

    // Validate all fields
    function validateForm() {
      let isValid = true;
      const inputs = form.querySelectorAll('input, textarea, select');
      inputs.forEach(input => {
        if (!validateField(input)) {
          isValid = false;
        }
      });
      return isValid;
    }

    // Add input event listeners for real-time validation
    form.querySelectorAll('input, textarea, select').forEach(input => {
      input.addEventListener('input', () => validateField(input));
      input.addEventListener('blur', () => validateField(input));
    });

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      if (!validateForm()) {
        return;
      }
      
      try {
        // Disable submit button and show loading state
        submitButton.disabled = true;
        submitButton.textContent = 'Sending...';
        formStatus.textContent = '';
        formStatus.className = 'form-status';
        
        const formData = {
          name: form.name.value.trim(),
          email: form.email.value.trim(),
          company: form.company.value.trim(),
          type: form.type.value,
          message: form.message.value.trim()
        };

        const response = await fetch('/api/send-email', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (response.ok) {
          formStatus.textContent = 'Thank you for your message. We will get back to you soon!';
          formStatus.className = 'form-status success';
          form.reset();
          // Clear all error messages
          form.querySelectorAll('.error-message').forEach(el => {
            el.textContent = '';
            el.style.display = 'none';
          });
        } else {
          throw new Error(data.message || 'Something went wrong');
        }
      } catch (error) {
        formStatus.textContent = 'Sorry, there was an error sending your message. Please try again later.';
        formStatus.className = 'form-status error';
        console.error('Error:', error);
      } finally {
        // Re-enable submit button and restore original text
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
      }
    });
  });
</script> 